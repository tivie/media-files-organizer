# pymediainfo.pyi

from typing import Any, Dict, List, Optional, Union


class Track:
    """
    Represents a single track in a media file.
    """

    track_type: str
    other_duration: Optional[List[str]]

    def __init__(self, xml_dom_fragment: Any) -> None: ...
    def __repr__(self) -> str: ...
    def __eq__(self, other: Any) -> bool: ...
    def to_data(self) -> Dict[str, Any]: ...
    def __getattribute__(self, name: str) -> Any: ...
    def __getstate__(self) -> Dict[str, Any]: ...
    def __setstate__(self, state: Dict[str, Any]) -> None: ...


class MediaInfo:
    """
    Represents information about a media file.
    """

    tracks: List[Track]

    def __init__(self, xml: str, encoding_errors: str = "strict") -> None: ...
    def __eq__(self, other: Any) -> bool: ...
    def to_data(self) -> Dict[str, Any]: ...
    def to_json(self) -> str: ...

    @classmethod
    def can_parse(cls, library_file: Optional[str] = None) -> bool: ...
    @classmethod
    def parse(
        cls,
        filename: Union[str, Any],
        library_file: Optional[str] = None,
        cover_data: bool = False,
        encoding_errors: str = "strict",
        parse_speed: float = 0.5,
        full: bool = True,
        legacy_stream_display: bool = False,
        mediainfo_options: Optional[Dict[str, str]] = None,
        output: Optional[str] = None,
        buffer_size: Optional[int] = 64 * 1024
    ) -> Union[str, "MediaInfo"]: ...

    @property
    def general_tracks(self) -> List[Track]: ...
    @property
    def video_tracks(self) -> List[Track]: ...
    @property
    def audio_tracks(self) -> List[Track]: ...
    @property
    def text_tracks(self) -> List[Track]: ...
    @property
    def other_tracks(self) -> List[Track]: ...
    @property
    def image_tracks(self) -> List[Track]: ...
    @property
    def menu_tracks(self) -> List[Track]: ...
